"FPR" = FPR)
return(out)
}
epi_data <- current_res$simulation_info$epi_data
source <- current_res$gen_res$source
ReturnTPR_FPR(epi_data, source, 0.5)
links
to_edge
ReturnTPR_FPR <- function(epi_data, source, x) {
from_edge <- c()
to_edge <- c()
for(i in 1:ncol(source)) {
browser()
posterior_source_distribution <- table(source[,i]) / sum(table(source[,i]))
links <- which(posterior_source_distribution > x & names(posterior_source_distribution) != -2)
links <- as.numeric(names(links))
for(j in links) {
if(j == -1) {
from_edge <- c(from_edge, i)
to_edge <- c(to_edge, i)
} else {
from_edge <- c(from_edge, j)
to_edge <- c(to_edge, i)
}
}
}
unique_ids <- unique(c(from_edge,to_edge))
TP <- 0
FP <- 0
FN <- 0
TN <- 0
browser()
for(i in 1:length(unique_ids)) {
for(j in 1:length(unique_ids)) {
person_i <- unique_ids[i]
person_j <- unique_ids[j]
source_j <- epi_data$true_source[person_j]
if(source_j == -1) {
# The current person j is an importation
if(person_i == person_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an importation
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
} else {
# The current person is an acquisition
if(person_i == source_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an acquisiton from the correct source
if(sum(from_edge==source_j & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
}
if(true_edge && inferred_edge) {
TP <- TP + 1
}
if(true_edge && !inferred_edge) {
FN <- FN + 1
}
if(!true_edge && inferred_edge) {
FP <- FP + 1
}
if(!true_edge && !inferred_edge) {
TN <- TN + 1
}
}
}
TPR <- TP/(TP+FN)
FPR <- FP/(FP+TN)
out <- list("TPR" = TPR,
"FPR" = FPR)
return(out)
}
ReturnTPR_FPR(epi_data, source, 0.5)
posterior_source_distribution
links
ReturnTPR_FPR <- function(epi_data, source, x) {
from_edge <- c()
to_edge <- c()
for(i in 1:ncol(source)) {
posterior_source_distribution <- table(source[,i]) / sum(table(source[,i]))
links <- which(posterior_source_distribution > x & names(posterior_source_distribution) != -2)
links <- as.numeric(names(links))
if(length(links)>0) browser()
for(j in links) {
if(j == -1) {
from_edge <- c(from_edge, i)
to_edge <- c(to_edge, i)
} else {
from_edge <- c(from_edge, j)
to_edge <- c(to_edge, i)
}
}
}
unique_ids <- unique(c(from_edge,to_edge))
TP <- 0
FP <- 0
FN <- 0
TN <- 0
browser()
for(i in 1:length(unique_ids)) {
for(j in 1:length(unique_ids)) {
person_i <- unique_ids[i]
person_j <- unique_ids[j]
source_j <- epi_data$true_source[person_j]
if(source_j == -1) {
# The current person j is an importation
if(person_i == person_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an importation
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
} else {
# The current person is an acquisition
if(person_i == source_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an acquisiton from the correct source
if(sum(from_edge==source_j & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
}
if(true_edge && inferred_edge) {
TP <- TP + 1
}
if(true_edge && !inferred_edge) {
FN <- FN + 1
}
if(!true_edge && inferred_edge) {
FP <- FP + 1
}
if(!true_edge && !inferred_edge) {
TN <- TN + 1
}
}
}
TPR <- TP/(TP+FN)
FPR <- FP/(FP+TN)
out <- list("TPR" = TPR,
"FPR" = FPR)
return(out)
}
ReturnTPR_FPR(epi_data, source, 0.5)
links
ReturnTPR_FPR <- function(epi_data, source, x) {
from_edge <- c()
to_edge <- c()
for(i in 1:ncol(source)) {
posterior_source_distribution <- table(source[,i]) / sum(table(source[,i]))
links <- which(posterior_source_distribution > x & names(posterior_source_distribution) != -2)
links <- as.numeric(names(links))
links[links >= 0] <- links[links >= 0] + 1
#if(length(links)>0) browser()
for(j in links) {
if(j == -1) {
from_edge <- c(from_edge, i)
to_edge <- c(to_edge, i)
} else {
from_edge <- c(from_edge, j)
to_edge <- c(to_edge, i)
}
}
}
unique_ids <- unique(c(from_edge,to_edge))
TP <- 0
FP <- 0
FN <- 0
TN <- 0
browser()
for(i in 1:length(unique_ids)) {
for(j in 1:length(unique_ids)) {
person_i <- unique_ids[i]
person_j <- unique_ids[j]
source_j <- epi_data$true_source[person_j]
if(source_j == -1) {
# The current person j is an importation
if(person_i == person_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an importation
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
} else {
# The current person is an acquisition
if(person_i == source_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an acquisiton from the correct source
if(sum(from_edge==source_j & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
}
if(true_edge && inferred_edge) {
TP <- TP + 1
}
if(true_edge && !inferred_edge) {
FN <- FN + 1
}
if(!true_edge && inferred_edge) {
FP <- FP + 1
}
if(!true_edge && !inferred_edge) {
TN <- TN + 1
}
}
}
TPR <- TP/(TP+FN)
FPR <- FP/(FP+TN)
out <- list("TPR" = TPR,
"FPR" = FPR)
return(out)
}
ReturnTPR_FPR(epi_data, source, 0.5)
from_edge
to_edge
person_j
TP
FN
TN
FP
from_edge
to_edge
ReturnTPR_FPR <- function(epi_data, source, x) {
from_edge <- c()
to_edge <- c()
for(i in 1:ncol(source)) {
posterior_source_distribution <- table(source[,i]) / sum(table(source[,i]))
links <- which(posterior_source_distribution > x & names(posterior_source_distribution) != -2)
links <- as.numeric(names(links))
links[links >= 0] <- links[links >= 0] + 1
#if(length(links)>0) browser()
for(j in links) {
if(j == -1) {
from_edge <- c(from_edge, i)
to_edge <- c(to_edge, i)
} else {
from_edge <- c(from_edge, j)
to_edge <- c(to_edge, i)
}
}
}
unique_ids <- unique(c(from_edge,to_edge))
TP <- 0
FP <- 0
FN <- 0
TN <- 0
browser()
for(i in 1:length(unique_ids)) {
for(j in 1:length(unique_ids)) {
person_i <- unique_ids[i]
person_j <- unique_ids[j]
source_j <- epi_data$true_source[person_j]
if(source_j == -1) {
# The current person j is an importation
if(person_i == person_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an importation
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
} else {
# The current person is an acquisition
if(person_i == source_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an acquisiton from the correct source
if(sum(from_edge==source_j & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
}
if(true_edge && inferred_edge) {
TP <- TP + 1
}
if(true_edge && !inferred_edge) {
FN <- FN + 1
}
if(!true_edge && inferred_edge) {
browser()
FP <- FP + 1
}
if(!true_edge && !inferred_edge) {
TN <- TN + 1
}
}
}
TPR <- TP/(TP+FN)
FPR <- FP/(FP+TN)
out <- list("TPR" = TPR,
"FPR" = FPR)
return(out)
}
ReturnTPR_FPR(epi_data, source, 0.5)
person_i
person_j
from_edge
to_edge
inferred_edge
true_edge
sum(from_edge==source_j & to_edge==person_j)
source_j
ReturnTPR_FPR <- function(epi_data, source, x) {
from_edge <- c()
to_edge <- c()
for(i in 1:ncol(source)) {
posterior_source_distribution <- table(source[,i]) / sum(table(source[,i]))
links <- which(posterior_source_distribution > x & names(posterior_source_distribution) != -2)
links <- as.numeric(names(links))
links[links >= 0] <- links[links >= 0] + 1
#if(length(links)>0) browser()
for(j in links) {
if(j == -1) {
from_edge <- c(from_edge, i)
to_edge <- c(to_edge, i)
} else {
from_edge <- c(from_edge, j)
to_edge <- c(to_edge, i)
}
}
}
unique_ids <- unique(c(from_edge,to_edge))
TP <- 0
FP <- 0
FN <- 0
TN <- 0
#browser()
for(i in 1:length(unique_ids)) {
for(j in 1:length(unique_ids)) {
person_i <- unique_ids[i]
person_j <- unique_ids[j]
source_j <- epi_data$true_source[person_j]
if(source_j == -1) {
# The current person j is an importation
if(person_i == person_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an importation
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
} else {
# The current person is an acquisition
if(person_i == source_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an acquisiton from the correct source
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
}
if(true_edge && inferred_edge) {
TP <- TP + 1
}
if(true_edge && !inferred_edge) {
FN <- FN + 1
}
if(!true_edge && inferred_edge) {
#browser()
FP <- FP + 1
}
if(!true_edge && !inferred_edge) {
TN <- TN + 1
}
}
}
browser()
TPR <- TP/(TP+FN)
FPR <- FP/(FP+TN)
out <- list("TPR" = TPR,
"FPR" = FPR)
return(out)
}
ReturnTPR_FPR(epi_data, source, 0.5)
TPR
TP
FN
FP
TN
ReturnTPR_FPR <- function(epi_data, source, x) {
from_edge <- c()
to_edge <- c()
for(i in 1:ncol(source)) {
posterior_source_distribution <- table(source[,i]) / sum(table(source[,i]))
links <- which(posterior_source_distribution > x & names(posterior_source_distribution) != -2)
links <- as.numeric(names(links))
links[links >= 0] <- links[links >= 0] + 1
#if(length(links)>0) browser()
for(j in links) {
if(j == -1) {
from_edge <- c(from_edge, i)
to_edge <- c(to_edge, i)
} else {
from_edge <- c(from_edge, j)
to_edge <- c(to_edge, i)
}
}
}
unique_ids <- unique(c(from_edge,to_edge))
TP <- 0
FP <- 0
FN <- 0
TN <- 0
#browser()
for(i in 1:length(unique_ids)) {
for(j in 1:length(unique_ids)) {
person_i <- unique_ids[i]
person_j <- unique_ids[j]
source_j <- epi_data$true_source[person_j]
if(source_j == -1) {
# The current person j is an importation
if(person_i == person_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an importation
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
} else {
# The current person is an acquisition
if(person_i == source_j) {
true_edge <- TRUE
} else {
true_edge <- FALSE
}
# Check if the person is inferred to be an acquisiton from the correct source
if(sum(from_edge==person_i & to_edge==person_j) > 0) {
inferred_edge <- TRUE
} else {
inferred_edge <- FALSE
}
}
if(true_edge && inferred_edge) {
TP <- TP + 1
}
if(true_edge && !inferred_edge) {
FN <- FN + 1
}
if(!true_edge && inferred_edge) {
#browser()
FP <- FP + 1
}
if(!true_edge && !inferred_edge) {
TN <- TN + 1
}
}
}
#browser()
TPR <- TP/(TP+FN)
FPR <- FP/(FP+TN)
out <- list("TPR" = TPR,
"FPR" = FPR)
return(out)
}
x <- seq(from=0.01,to=0.99,len=101)
tpr_fpr <- sapply(x, ReturnTPR_FPR, epi_data=epi_data, source=source)
tpr_fpr
tpr_fpr[1,]
tpr_fpr[2,]
tpr <- unlist(tpr_fpr[1,])
fpr <- unlist(tpr_fpr[2,])
plot(fpr,tpr)
plot(fpr,tpr,type="s")
